#! /usr//bin/env python
# Time-stamp: <2017-06-15 08:17:41 cp983411>

import glob
import os.path as op
import numpy as np
import numpy.linalg as npl
from numpy import (corrcoef, around, array, dot, identity)
from numpy import column_stack as cbind
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt


def projector(M):
    """ returns the transformation projecting orthogonally on the subspace generated by the columns of M"""
    if M.ndim == 1:
        M = array(M, ndmin=2).T
    return dot(M, dot(npl.pinv(dot(M.T, M)), M.T))


def test_projector():
    M = array([[1, 2, 3, 4], [5, 6, 7, 8]]).T
    print(projector(M))

    M = array([1, 1, 1])
    print(projector(M))


def ortho_proj(Y, M):
    if M.ndim == 1:
        M = M[:, np.newaxis]
    X1,_,_,_ = npl.lstsq(M, Y)
    X2 = Y - np.dot(M, X1)
    return X2


for f in glob.glob('session*.csv'):
    df = pd.read_csv(f, sep='\t')
    M1 = df.as_matrix().T
    print(around(corrcoef(M1), 2))

    sns.pairplot(df)
    plt.show()

    X1 = df.rms
    X2 = ortho_proj(df.f0, X1)
    X3 = ortho_proj(df.wordrate, cbind((X1, X2)))
    X4 = ortho_proj(df.freq, cbind((X1, X2, X3)))
    X5 = ortho_proj(df.mwe, cbind((X1, X2, X3, X4)))
    X6 = ortho_proj(df.bottomup, cbind((X1, X2, X3, X4)))


    M2 = cbind((X1, X2, X3, X4, X5, X6))
    newdf = pd.DataFrame(data=M2,
                         columns=['rms', 'f0_o', 'wordrate_o', 'freq_o', 'mwe_o', 'bottomup_o'])
    fname, ext  = op.splitext(f)
    newfname = fname + '_ortho' + ext
    newdf.to_csv(newfname)
    sns.pairplot(newdf)
    plt.show()
    print(around(corrcoef(M2.T), 2))

    plt.close('all')
    
